# Code generated by rog-codegen
# DO NOT EDIT
{{define "enum"}}{{with .}}, in: %w[{{join . " "}}]{{end}}{{end -}}
{{define "schema"}}{{if eq .RefType "Array"}} do |array, index|{{if eq .ArrayItems.RefType "Hash"}}{{range .ArrayItems.Properties}}
      array.param! :{{.Name}}, {{.Schema.RefType}}, required: {{.Required}}{{template "schema" .Schema}}{{end}}{{else}}
      array.param! index, {{.ArrayItems.RefType}}{{end}}, required: true
    end{{else if eq .RefType "Hash"}} do |hash|{{with .Properties}}{{range .}}
      hash.param! :{{.Name}}, {{.Schema.RefType}}, required: {{.Required}}{{template "enum" .Schema.EnumValues}}{{template "schema" .Schema}}{{end}}{{end}}
    end{{else}}{{end}}{{end -}}
{{define "param"}}param! :{{.ParamName}}, {{.Schema.RefType}}, required: {{.Required}}{{template "enum" .Schema.EnumValues}}{{template "schema" .Schema}}{{end -}}
{{define "property"}}param! :{{.Name}}, {{.Schema.RefType}}, required: {{.Required}}{{template "enum" .Schema.EnumValues}}{{template "schema" .Schema}}{{end}}
class {{.ClassName}} < ApplicationController
{{- range .Definitions}}
  def {{.MethodName -}}
  {{with .Parameters -}}
  {{range .}}
    {{template "param" . -}}
  {{end -}}
  {{end -}}
  {{if eq .BodyParameters.Schema.RefType "Hash" -}}
  {{with .BodyParameters.Schema.Properties -}}
  {{range .}}
    {{template "property" . -}}
  {{end -}}
  {{end -}}
  {{end}}
    service = {{$.ServiceName}}.new(params)
    render json: service.{{.MethodName}}, status: :ok
  end
{{end -}}
end
